import{constants as m}from"fs";import{access as p,mkdir as w,readFile as $,rm as d,writeFile as g}from"fs/promises";import{dirname as u}from"path";import y from"../Library/Directory.js";import k from"../Library/Package.js";import C from"../Library/Type.js";import h from"../Option/Cloudflare.js";const F=async l=>{for(const{Path:o,Name:r,File:s}of l)for(const[a,f]of await y(await k("Cloudflare"))){const t=`${a}/.github`,i=await s();if(o==="/workflows/"&&r==="Cloudflare.yml")for(const e of f){const D=u(e).replace(a,""),v=(await $(e,"utf-8")).toString(),c=(await C()).get(e.split("/").pop());if(typeof c<"u"&&c==="Cloudflare")try{}catch(n){console.log(e),console.log(n)}}if(i.size>1){try{await w(`${t}${o}`,{recursive:!0})}catch{console.log(`Could not create: ${t}${o}`)}try{await g(`${t}${o}${r}`,`${[...i].join("")}`)}catch{console.log(`Could not create workflow for: ${t}/workflows/Cloudflare.yml`)}}else try{await p(`${t}${o}${r}`,m.F_OK);try{await d(`${t}${o}${r}`)}catch{console.log(`Could not remove ${o}${r} for: ${t}`)}}catch{}}};var B=async()=>await F(h);export{B as default};
