import l from"../Library/Environment.js";import a from"../Library/Request.js";var m=async(i=[])=>{const r=l.GITHUB_USER,n=[],s=[];for(const e of(await a(`GET /users/${r}/repos`))?.data)s.push({owner:r,name:e.name});for(const e of(await a(`GET /users/${r}/orgs`))?.data){n.push({name:e.login});for(const t of(await a(`GET /orgs/${e.login}/repos`))?.data)s.push({owner:e.login,name:t.name})}for(const e of n)await a(`PUT /orgs/${e.name}/actions/permissions`,{org:e.name,enabled_repositories:"all",allowed_actions:"all"}),await a(`PUT /orgs/${e.name}/actions/permissions/workflow`,{org:e.name,default_workflow_permissions:"write",can_approve_pull_request_reviews:!0});let o=null;for(const e of s){for(const t of i)e.name===t?o=!0:o=!1;(o===null||o)&&(await a(`PUT /repos/${e.owner}/${e.name}/vulnerability-alerts`),await a(`PUT /repos/${e.owner}/${e.name}/automated-security-fixes`),await a(`PATCH /repos/${e.owner}/${e.name}`,{has_issues:!0,has_projects:!1,has_wiki:!1,allow_squash_merge:!0,allow_merge_commit:!0,allow_rebase_merge:!1,allow_auto_merge:!0,delete_branch_on_merge:!0,allow_update_branch:!0,use_squash_pr_title_as_default:!0,allow_forking:!0,web_commit_signoff_required:!0}),await a(`PUT /repos/${e.owner}/${e.name}/actions/permissions`,{enabled:!0,allowed_actions:"all"}),await a(`PUT /repos/${e.owner}/${e.name}/actions/permissions/workflow`,{default_workflow_permissions:"write",can_approve_pull_request_reviews:!0}),await a(`PUT /user/starred/${e.owner}/${e.name}`),await a(`PUT /repos/${e.owner}/${e.name}/actions/permissions/access`,{access_level:"organization"}))}};export{m as default};
