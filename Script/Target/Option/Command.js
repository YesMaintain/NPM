const e=new Set([{Name:"clean",Description:"Clean GitHub repositories",Arguments:new Set([{Name:"[repositories...]",Description:"Repositories to clean."}]),Action:(await import("../Command/Clean.js")).default},{Name:"dispatch",Description:"Trigger dispatch events.",Arguments:new Set([{Name:"[repositories...]",Description:"Repositories on which to trigger dispatch events."}]),Action:(await import("../Command/Dispatch.js")).default},{Name:"dependabot",Type:"Workflow",Description:"Put Dependabot everywhere.",Action:(await import("../Command/Dependabot.js")).default},{Name:"edit",Arguments:new Set([{Name:"[repositories...]",Description:"Repositories to edit."}]),Description:"Edit features for all repositories.",Action:(await import("../Command/Edit.js")).default},{Name:"node",Type:"Workflow",Description:"Put node into GitHub Actions.",Action:(await import("../Command/Node.ts")).default},{Name:"npm",Type:"Workflow",Description:"Put NPM into GitHub Actions.",Action:(await import("../Command/NPM.js")).default},{Name:"rust",Type:"Workflow",Description:"Put rust into GitHub Actions.",Action:(await import("../Command/Rust.js")).default},{Name:"workflows",Description:"Trigger all workflow tasks.",Action:async()=>e.forEach(t=>t.Type==="Workflow"?t.Action():{})},{Name:"star",Description:"Star all my used repositories.",Action:(await import("../Command/Star.js")).default}]);var i=e;export{i as default};
