import{Octokit as l}from"@octokit/core";import n from"../lib/env.js";const i=async()=>{const s=n.GITHUB_USER,t=[],a=[],o=new l({auth:n.GITHUB_AUTH_TOKEN});for(const e of(await o.request(`GET /users/${s}/repos`)).data)a.push({owner:s,name:e.name});for(const e of(await o.request(`GET /users/${s}/orgs`)).data){t.push({name:e.login});for(const r of(await o.request(`GET /orgs/${e.login}/repos`)).data)a.push({owner:e.login,name:r.name})}for(const e of t){try{await o.request(`PUT /orgs/${e.name}/actions/permissions`,{org:e.name,enabled_repositories:"all",allowed_actions:"all"}),console.log(`Set actions/permissions for: ${e.name}`)}catch{console.log(`Could not set actions/permissions for: ${e.name}`)}try{await o.request(`PUT /orgs/${e.name}/actions/permissions/workflow`,{org:e.name,default_workflow_permissions:"write",can_approve_pull_request_reviews:!0}),console.log(`Set permissions/workflow for: ${e.name}`)}catch{console.log(`Could not set permissions/workflow for: ${e.name}`)}}for(const e of a){try{await o.request(`PUT /repos/${e.owner}/${e.name}/vulnerability-alerts`),console.log(`Enabled vulnerability-alerts for: ${e.name}`)}catch{console.log(`Could not enable vulnerability-alerts for: ${e.name}`)}try{await o.request(`PUT /repos/${e.owner}/${e.name}/automated-security-fixes`),console.log(`Enabled automated-security-fixes for: ${e.name}`)}catch{console.log(`Could not enable automated-security-fixes for: ${e.name}`)}try{await o.request(`PATCH /repos/${e.owner}/${e.name}`,{has_issues:!0,has_projects:!1,has_wiki:!1,allow_squash_merge:!0,allow_merge_commit:!0,allow_rebase_merge:!1,allow_auto_merge:!0,delete_branch_on_merge:!0,allow_update_branch:!0,use_squash_pr_title_as_default:!0,allow_forking:!0,web_commit_signoff_required:!0}),console.log(`Updated features for: ${e.name}`)}catch{console.log(`Could not update features for: ${e.name}`)}try{await o.request(`PUT /repos/${e.owner}/${e.name}/actions/permissions`,{enabled:!0,allowed_actions:"all"}),console.log(`Updated actions/permissions for: ${e.name}`)}catch{console.log(`Could not update actions/permissions for: ${e.name}`)}try{await o.request(`PUT /repos/${e.owner}/${e.name}/actions/permissions/workflow`,{default_workflow_permissions:"write",can_approve_pull_request_reviews:!0}),console.log(`Updated actions/permissions/workflow for: ${e.name}`)}catch{console.log(`Could not update actions/permissions/workflow for: ${e.name}`)}try{await o.request(`PUT /user/starred/${e.owner}/${e.name}`),console.log(`Starred repository: ${e.name}`)}catch{console.log(`Could not star repository: ${e.name}`)}try{await o.request(`PUT /repos/${e.owner}/${e.name}/actions/permissions/access`,{access_level:"organization"}),console.log(`Updated actions/permissions/access for: ${e.name}`)}catch{console.log(`Could not update actions/permissions/access for: ${e.name}`)}}};var m=i;export{m as default};
