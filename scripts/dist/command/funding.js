import*as i from"fs";import n from"../lib/git-directories.js";import f from"../lib/packages.js";import m from"../options/funding.js";import{constants as w}from"fs/promises";const $=async s=>{for(const{path:t,name:r,workflow:e}of s)for(const[c]of await n(await f())){const o=`${c}/.github`,a=await e();if(a.size>0){try{await i.promises.mkdir(`${o}${t}`,{recursive:!0})}catch{console.log(`Could not create: ${o}${t}`)}try{await i.promises.writeFile(`${o}${t}${r}`,`${[...a].join("")}`)}catch{console.log(`Could not create workflow for: ${o}/FUNDING.yml`)}}else try{await i.promises.access(`${o}${t}${r}`,w.F_OK);try{await i.promises.rm(`${o}${t}${r}`)}catch{console.log(`Could not remove ${t}${r} for: ${o}`)}}catch{}}};var g=async()=>{await $(m)};export{g as default};
