import{constants as s}from"fs";import{access as n,mkdir as f,rm as w,writeFile as $}from"fs/promises";import l from"../lib/git-directories.js";import m from"../lib/packages.js";import p from"../options/funding.js";const u=async i=>{for(const{path:t,name:r,workflow:e}of i)for(const[c]of await l(await m())){const o=`${c}/.github`,a=await e();if(a.size>0){try{await f(`${o}${t}`,{recursive:!0})}catch{console.log(`Could not create: ${o}${t}`)}try{await $(`${o}${t}${r}`,`${[...a].join("")}`)}catch{console.log(`Could not create workflow for: ${o}/FUNDING.yml`)}}else try{await n(`${o}${t}${r}`,s.F_OK);try{await w(`${o}${t}${r}`)}catch{console.log(`Could not remove ${t}${r} for: ${o}`)}}catch{}}};var C=async()=>{await u(p)};export{C as default};
